name: Deploy Next.js to Windows Server with Docker Compose

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env.local file from secrets
        run: |
          Set-Content -Path ".env" -Value "AUTH_SECRET=${{ secrets.AUTH_SECRET }}" -Encoding UTF8
          Add-Content -Path ".env" -Value -Value "AUTH_TRUST_HOST=${{ secrets.AUTH_TRUST_HOST }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "AUTH_URL=${{ secrets.AUTH_URL }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "URL=${{ secrets.URL }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "AUTH_URL=${{ secrets.AUTH_URL }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "CLOUDINARY_AUTHORIZATION=${{ secrets.CLOUDINARY_AUTHORIZATION }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "CLOUDINARY_URL=${{ secrets.CLOUDINARY_URL }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "DATABASE_URL=${{ secrets.DATABASE_URL }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "EMAIL_USER=${{ secrets.EMAIL_USER }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "NEXT_PUBLIC_CLOUDINARY_API_KEY=${{ secrets.NEXT_PUBLIC_CLOUDINARY_API_KEY }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME=${{ secrets.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "POSTGRES_DATABASE=${{ secrets.POSTGRES_DATABASE }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "POSTGRES_PRISMA_URL=${{ secrets.POSTGRES_PRISMA_URL }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "POSTGRES_URL=${{ secrets.POSTGRES_URL }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "POSTGRES_URL_NON_POOLING=${{ secrets.POSTGRES_URL_NON_POOLING }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "POSTGRES_URL_NO_SSL=${{ secrets.POSTGRES_URL_NO_SSL }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" -Encoding UTF8
          Add-Content -Path ".env" -Value "SESSION_SECRET=${{ secrets.SESSION_SECRET }}" -Encoding UTF8   
          shell: powershell
          
      - name: Start Docker Compose
        run: docker compose --env-file .env.local up -d --build --remove-orphans

