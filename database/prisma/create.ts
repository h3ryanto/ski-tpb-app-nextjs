import { prisma } from '@/lib/prisma/db'

export async function createHeader(data: any) {
    try {
        const header = await prisma.header.create({
            data: {
                id: data.id,
                nomor_aju: data.nomor_aju,
                kode_dokumen: data.kode_dokumen,
                kode_kantor: data.kode_kantor,
                kode_kantor_bongkar: data.kode_kantor_bongkar,
                kode_kantor_periksa: data.kode_kantor_periksa,
                kode_kantor_tujuan: data.kode_kantor_tujuan,
                kode_kantor_ekspor: data.kode_kantor_ekspor,
                kode_jenis_impor: data.kode_jenis_impor,
                kode_jenis_ekspor: data.kode_jenis_ekspor,
                kode_jenis_tpb: data.kode_jenis_tpb,
                kode_jenis_plb: data.kode_jenis_plb,
                kode_jenis_prosedur: data.kode_jenis_prosedur,
                kode_tujuan_pemasukan: data.kode_tujuan_pemasukan,
                kode_tujuan_pengiriman: data.kode_tujuan_pengiriman,
                kode_tujuan_tpb: data.kode_tujuan_tpb,
                kode_cara_dagang: data.kode_cara_dagang,
                kode_cara_bayar: data.kode_cara_bayar,
                kode_cara_bayar_lainnya: data.kode_cara_bayar_lainnya,
                kode_gudang_asal: data.kode_gudang_asal,
                kode_gudang_tujuan: data.kode_gudang_tujuan,
                kode_jenis_kirim: data.kode_jenis_kirim,
                kode_jenis_pengiriman: data.kode_jenis_pengiriman,
                kode_kategori_ekspor: data.kode_kategori_ekspor,
                kode_kategori_masuk_ftz: data.kode_kategori_masuk_ftz,
                kode_kategori_keluar_ftz: data.kode_kategori_keluar_ftz,
                kode_kategori_barang_ftz: data.kode_kategori_barang_ftz,
                kode_lokasi: data.kode_lokasi,
                kode_lokasi_bayar: data.kode_lokasi_bayar,
                lokasi_asal: data.lokasi_asal,
                lokasi_tujuan: data.lokasi_tujuan,
                kode_daerah_asal: data.kode_daerah_asal,
                kode_negara_tujuan: data.kode_negara_tujuan,
                kode_tutup_pu: data.kode_tutup_pu,
                nomor_bc11: data.nomor_bc11,
                tanggal_bc11: data.tanggal_bc11,
                nomor_pos: data.nomor_pos,
                nomor_sub_pos: data.nomor_sub_pos,
                kode_pelabuhan_bongkar: data.kode_pelabuhan_bongkar,
                kode_pelabuhan_muat: data.kode_pelabuhan_muat,
                kode_pelabuhan_muat_akhir: data.kode_pelabuhan_muat_akhir,
                kode_pelabuhan_transit: data.kode_pelabuhan_transit,
                kode_pelabuhan_tujuan: data.kode_pelabuhan_tujuan,
                kode_pelabuhan_ekspor: data.kode_pelabuhan_ekspor,
                kode_tps: data.kode_tps,
                tanggal_berangkat: data.tanggal_berangkat,
                tanggal_ekspor: data.tanggal_ekspor,
                tanggal_masuk: data.tanggal_masuk,
                tanggal_muat: data.tanggal_muat,
                tanggal_tiba: data.tanggal_tiba,
                tanggal_periksa: data.tanggal_periksa,
                tempat_stuffing: data.tempat_stuffing,
                tanggal_stuffing: data.tanggal_stuffing,
                kode_tanda_pengaman: data.kode_tanda_pengaman,
                jumlah_tanda_pengaman: data.jumlah_tanda_pengaman,
                flag_curah: data.flag_curah,
                flag_sda: data.flag_sda,
                flag_vd: data.flag_vd,
                flag_ap_bk: data.flag_ap_bk,
                flag_migas: data.flag_migas,
                kode_asuransi: data.kode_asuransi,
                asuransi: data.asuransi,
                nilai_barang: data.nilai_barang,
                nilai_incoterm: data.nilai_incoterm,
                nilai_maklon: data.nilai_maklon,
                freight: data.freight,
                fob: data.fob,
                biaya_tambahan: data.biaya_tambahan,
                biaya_pengurang: data.biaya_pengurang,
                vd: data.vd,
                cif: data.cif,
                harga_penyerahan: data.harga_penyerahan,
                ndpbm: data.ndpbm,
                total_dana_sawit: data.total_dana_sawit,
                dasar_pengenaan_pajak: data.dasar_pengenaan_pajak,
                nilai_jasa: data.nilai_jasa,
                uang_muka: Number(data.uang_muka),
                bruto: Number(data.bruto),
                netto: Number(data.netto),
                volume: Number(data.volume),
                kota_pernyataan: data.kota_pernyataan,
                tanggal_pernyataan: data.tanggal_pernyataan,
                nama_pernyataan: data.nama_pernyataan,
                jabatan_pernyataan: data.jabatan_pernyataan,
                kode_valuta: data.kode_valuta,
                kode_incoterm: data.kode_incoterm,
                kode_jasa_kena_pajak: data.kode_jasa_kena_pajak,
                nomor_bukti_bayar: data.nomor_bukti_bayar,
                tanggal_bukti_bayar: data.tanggal_bukti_bayar,
                kode_jenis_nilai: data.kode_jenis_nilai,
                nomor_daftar: data.nomor_daftar,
                tanggal_daftar: data.tanggal_daftar + "T00:00:00.000000Z",
                create_by: data.create_by,
                created_at: data.created_at,
                updated_at: data.updated_at
            }
        })
        return header;
    } catch (error) {
        return error;
    }
}

export async function createEntitas(data: any) {
    await prisma.header.create({
        data: data
    })
}